##########################################################################
# Copyright (C) 2007-2009 Douglas Gregor <doug.gregor@gmail.com>         #
# Copyright (C) 2007-2009 Troy Straszheim <troy@resophonic.com>          #
# Copyright (C) 2010-2011 Daniel Pfeifer <daniel@pfeifer-mail.de>        #
#                                                                        #
# Distributed under the Boost Software License, Version 1.0.             #
# See accompanying file LICENSE_1_0.txt or copy at                       #
#   http://www.boost.org/LICENSE_1_0.txt                                 #
##########################################################################

cmake_minimum_required(VERSION 2.8.5 FATAL_ERROR)
project(Boost)

set(Boost_DIR "${Boost_SOURCE_DIR}")

set(BOOST_INITIAL_PASS TRUE CACHE BOOL "")
if(BOOST_INITIAL_PASS)
  set(Boost_MODULE_PATH "${Boost_SOURCE_DIR}/cmake/modules")
  set(Boost_RESOURCE_PATH "${Boost_SOURCE_DIR}/cmake/resources")
endif(BOOST_INITIAL_PASS)

# make visual studio look nice
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

add_subdirectory(accumulators)
add_subdirectory(algorithm)
add_subdirectory(any)
add_subdirectory(array)
add_subdirectory(asio)
add_subdirectory(assign)
add_subdirectory(auto_index)
add_subdirectory(bimap)
add_subdirectory(bind)
add_subdirectory(boostbook)
add_subdirectory(chrono)
add_subdirectory(circular_buffer)
add_subdirectory(cmake)
add_subdirectory(compatibility)
add_subdirectory(concept_check)
add_subdirectory(config)
add_subdirectory(container)
add_subdirectory(context)
add_subdirectory(conversion)
add_subdirectory(core)
add_subdirectory(crc)
add_subdirectory(date_time)
add_subdirectory(disjoint_sets)
add_subdirectory(dynamic_bitset)
add_subdirectory(exception)
add_subdirectory(filesystem)
add_subdirectory(flyweight)
add_subdirectory(foreach)
add_subdirectory(format)
add_subdirectory(function_types)
add_subdirectory(function)
add_subdirectory(functional)
add_subdirectory(fusion)
add_subdirectory(geometry)
add_subdirectory(gil)
add_subdirectory(graph_parallel)
add_subdirectory(graph)
add_subdirectory(heap)
add_subdirectory(icl)
add_subdirectory(inspect)
add_subdirectory(integer)
add_subdirectory(interprocess)
add_subdirectory(intrusive)
add_subdirectory(io)
add_subdirectory(iostreams)
add_subdirectory(iterator)
add_subdirectory(lambda)
add_subdirectory(local_function)
add_subdirectory(locale)
add_subdirectory(logic)
add_subdirectory(math)
add_subdirectory(move)
add_subdirectory(mpi)
add_subdirectory(mpl)
add_subdirectory(msm)
add_subdirectory(multi_array)
add_subdirectory(multi_index)
add_subdirectory(numeric)
add_subdirectory(optional)
add_subdirectory(parameter)
add_subdirectory(phoenix)
add_subdirectory(polygon)
add_subdirectory(pool)
add_subdirectory(preprocessor)
add_subdirectory(program_options)
add_subdirectory(property_map)
add_subdirectory(property_tree)
add_subdirectory(proto)
add_subdirectory(ptr_container)
add_subdirectory(python)
add_subdirectory(quickbook)
add_subdirectory(random)
add_subdirectory(range)
add_subdirectory(ratio)
add_subdirectory(rational)
add_subdirectory(regex)
add_subdirectory(scope_exit)
add_subdirectory(serialization)
add_subdirectory(signals)
add_subdirectory(signals2)
add_subdirectory(smart_ptr)
add_subdirectory(spirit)
add_subdirectory(statechart)
add_subdirectory(static_assert)
add_subdirectory(system)
add_subdirectory(test)
add_subdirectory(thread)
add_subdirectory(timer)
add_subdirectory(tokenizer)
add_subdirectory(tr1)
add_subdirectory(tti)
add_subdirectory(tuple)
add_subdirectory(type_traits)
add_subdirectory(typeof)
add_subdirectory(units)
add_subdirectory(unordered)
add_subdirectory(utility)
add_subdirectory(uuid)
add_subdirectory(variant)
add_subdirectory(wave)
add_subdirectory(xpressive)

if(BOOST_INITIAL_PASS)
  # report an error in order to inhibit the generation step (save time).
  message(SEND_ERROR
    "Initial pass successfully completed, now run CMake again!"
    )
  set(BOOST_INITIAL_PASS FALSE CACHE BOOL "" FORCE)
endif(BOOST_INITIAL_PASS)

